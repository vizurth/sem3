cmake_minimum_required(VERSION 3.10)
project(HelloWorld VERSION 1.0 LANGUAGES CXX)

# Включаем автоматическую обработку мета-объектного компилятора (moc) 
# для обработки макроса Q_OBJECT, необходимого для сигналов/слотов Qt.
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON) # Рекомендуется, если вы в будущем будете использовать файлы ресурсов (.qrc)

# Устанавливаем современный стандарт C++ (например, C++17)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Находим пакет Qt6 и необходимые компоненты.
# 'Widgets' необходим для QWidget, QLabel, QPushButton.
find_package(Qt6 COMPONENTS Widgets REQUIRED)

# Список исходных файлов. 
# В соответствии с заданием, у вас должны быть main.cpp, mainwindow.h и mainwindow.cpp.
# Предположим, вы используете main.cpp, mainwindow.h и mainwindow.cpp
set(SOURCE_FILES
    src/main.cpp
)

set(HEADER_FILES
    src/headers/mainwindow.h
)

# Создаем исполняемый файл
add_executable(${PROJECT_NAME} ${SOURCE_FILES} ${HEADER_FILES})

# Привязываем библиотеки Qt6 Widgets к вашему исполняемому файлу
target_link_libraries(${PROJECT_NAME} PRIVATE Qt6::Widgets)

# Устанавливаем свойства Qt для цели, 
# чтобы убедиться, что все исходные файлы обрабатываются корректно (moc, rcc и т.д.)